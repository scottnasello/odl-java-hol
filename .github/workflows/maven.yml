# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 15
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        server-id: github
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Configure Git user
      run: |
        git config user.email "actions@github.com"
        git config user.name "GitHub Actions"
    - name: Publish JAR
      run: mvn -B release:prepare release:perform
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
    - name: Save JAR
      run: mkdir staging && cp target/intros-app*.jar staging
    - name: Deploy JAR to OCI
      uses: easingthemes/ssh-deploy@main
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_PROD }}
        ARGS: >-  
          -rltgoDzvO
          --exclude='.git'
          --exclude='node_modules/'
        REMOTE_HOST: ${{ secrets.REMOTE_HOST_PROD }}
        REMOTE_USER: ${{ secrets.REMOTE_USER_PROD }}
        TARGET: /home/opc/odl-java-hol/target/
    - name: Post Deploy
      uses: appleboy/ssh-action@master
      with:
          host: ${{ secrets.REMOTE_HOST_PROD }}
          username: ${{ secrets.REMOTE_USER_PROD }}
          key: ${{ secrets.SSH_PRIVATE_KEY_PROD }}
          port: 22
          script: |
            cp /home/opc/odl-java-hol/target/staging /home/opc/odl-java-hol/target/
            cd /home/opc/odl-java-hol/target/
            java --enable-preview -jar -intros-app.jar
